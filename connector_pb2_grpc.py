# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import connector_pb2 as connector__pb2
import soldier_pb2 as soldier__pb2


class PassAlertStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendAlert = channel.unary_unary(
                '/PassAlert/SendAlert',
                request_serializer=connector__pb2.MissileStrike.SerializeToString,
                response_deserializer=connector__pb2.Hit.FromString,
                )
        self.RegisterNode = channel.unary_unary(
                '/PassAlert/RegisterNode',
                request_serializer=connector__pb2.Coordinate.SerializeToString,
                response_deserializer=soldier__pb2.void.FromString,
                )
        self.RegisterEnemy = channel.unary_unary(
                '/PassAlert/RegisterEnemy',
                request_serializer=soldier__pb2.void.SerializeToString,
                response_deserializer=soldier__pb2.void.FromString,
                )
        self.Attack = channel.unary_unary(
                '/PassAlert/Attack',
                request_serializer=connector__pb2.MissileStrike.SerializeToString,
                response_deserializer=soldier__pb2.void.FromString,
                )


class PassAlertServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendAlert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterEnemy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Attack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PassAlertServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendAlert': grpc.unary_unary_rpc_method_handler(
                    servicer.SendAlert,
                    request_deserializer=connector__pb2.MissileStrike.FromString,
                    response_serializer=connector__pb2.Hit.SerializeToString,
            ),
            'RegisterNode': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterNode,
                    request_deserializer=connector__pb2.Coordinate.FromString,
                    response_serializer=soldier__pb2.void.SerializeToString,
            ),
            'RegisterEnemy': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterEnemy,
                    request_deserializer=soldier__pb2.void.FromString,
                    response_serializer=soldier__pb2.void.SerializeToString,
            ),
            'Attack': grpc.unary_unary_rpc_method_handler(
                    servicer.Attack,
                    request_deserializer=connector__pb2.MissileStrike.FromString,
                    response_serializer=soldier__pb2.void.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PassAlert', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PassAlert(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendAlert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PassAlert/SendAlert',
            connector__pb2.MissileStrike.SerializeToString,
            connector__pb2.Hit.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PassAlert/RegisterNode',
            connector__pb2.Coordinate.SerializeToString,
            soldier__pb2.void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterEnemy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PassAlert/RegisterEnemy',
            soldier__pb2.void.SerializeToString,
            soldier__pb2.void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Attack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PassAlert/Attack',
            connector__pb2.MissileStrike.SerializeToString,
            soldier__pb2.void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
