// Proto file for the connector between a team and its enemy.
// python3 -m grpc_tools.protoc -I. --python_out=. --pyi_out=. --grpc_python_out=. connector.proto

syntax = "proto3";
import "soldier.proto";

// To store the coordinates of the missile strike
message Coordinate
{
    optional int32 x = 1;
    optional int32 y = 2;
}

// To store information about the missile strike
message MissileStrike
{
    optional Coordinate pos = 1;
    optional int32 type = 2;
}

// To store information about the consequences of the missile strike on the enemy
message Hit
{
    optional int32 hits = 1;
    optional int32 kills = 2;
    optional int32 points = 3;
}

// To exchange the points each team has between each other
message Points
{
    optional int32 points = 1;
}

// To exchange the timestamp between the teams and decide which team attacks first
message Timestamp
{
    optional float timestamp = 1;
}

// The services to exchange information between the teams such as the missile strikes, the points, the timestamp and the registration of the nodes
service PassAlert
{
    rpc SendAlert(MissileStrike) returns (Hit) {}
    rpc RegisterNode(soldier.SoldierData) returns (soldier.void) {}
    rpc RegisterEnemy(Timestamp) returns (soldier.void) {}
    rpc Attack(MissileStrike) returns (Hit) {}
    rpc GetPoints(Points) returns (Points) {}
}